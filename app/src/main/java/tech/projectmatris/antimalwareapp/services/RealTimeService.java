package tech.projectmatris.antimalwareapp.services;

import android.app.Notification;
import android.app.NotificationChannel;
import android.app.NotificationManager;
import android.app.Service;
import android.content.BroadcastReceiver;
import android.content.Context;
import android.content.Intent;
import android.content.IntentFilter;
import android.content.SharedPreferences;
import android.os.Build;
import android.os.IBinder;
import android.preference.PreferenceManager;
import android.util.Log;

import com.projectmatris.antimalwareapp.R;

import androidx.annotation.Nullable;
import androidx.core.app.NotificationCompat;
import androidx.core.app.NotificationManagerCompat;
import androidx.core.content.ContextCompat;
import tech.projectmatris.antimalwareapp.scanners.AppScanner;

public class RealTimeService extends Service {
    private BroadcastReceiver receiver;
    public RealTimeService(){}
    private NotificationManagerCompat notificationManager;
    private NotificationCompat.Builder notificationBuilder;
    private int NOTIFICATION_ID = 200;
    private String CHANNEL_ID = "channel_100";
    private String CHANNEL_NAME = "PROJECT MATRIS";
    private NotificationChannel mChannel;

    @Override
    public void onCreate() {
        IntentFilter intentFilter = new IntentFilter(Intent.ACTION_PACKAGE_ADDED);
        intentFilter.addDataScheme("package");
        notificationManager = NotificationManagerCompat.from(this);
        notificationBuilder = new NotificationCompat.Builder(this,CHANNEL_ID);
        if(Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) {
            mChannel = new NotificationChannel(CHANNEL_ID, CHANNEL_NAME, NotificationManager.IMPORTANCE_HIGH);
            notificationManager.createNotificationChannel(mChannel);
            notificationBuilder.setSmallIcon(R.drawable.ic_menu_security_black)
                    .setOngoing(true)
                    .setContentTitle("Project Matris")
                    .setContentText("Real Time Scan is On");
            //notificationManager.notify(NOTIFICATION_ID, notificationBuilder.build());
            Notification notification = notificationBuilder.build();
            startForeground(NOTIFICATION_ID,notification);
        }
        receiver = new BroadcastReceiver() {
            @Override
            public void onReceive(Context context, Intent intent) {
                Log.d("RealTimeService","onReceive called");
                SharedPreferences sharedPreferences;
                sharedPreferences = PreferenceManager.getDefaultSharedPreferences(context);
                if(sharedPreferences.getBoolean("realTime",true)) {
                    String packageName = null;
                    if (intent.getAction().equals("android.intent.action.PACKAGE_ADDED")) {
                        packageName = intent.getDataString().replace("package:", "");
                    }
                    if(Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) {
                        ContextCompat.startForegroundService(context,new Intent(context, AppScanService.class).putExtra("packageName",packageName));
                    }else {
                        final AppScanner scanner = new AppScanner(context, packageName);
                        scanner.execute();
                    }
                }
            }
        };
        registerReceiver(receiver,intentFilter);
    }

    @Override
    public int onStartCommand(Intent intent, int flags, int startId) {
        return START_STICKY;
    }

    @Override
    public void onDestroy() {
        unregisterReceiver(receiver);
        stopForeground(true);
    }

    @Nullable
    @Override
    public IBinder onBind(Intent intent) {
        return null;
    }
}
